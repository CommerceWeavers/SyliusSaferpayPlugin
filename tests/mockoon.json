{
  "uuid": "9636c53b-0ede-4780-970b-75b0a540eebe",
  "lastMigration": 27,
  "name": "Saferpay",
  "endpointPrefix": "",
  "latency": 0,
  "port": 4000,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "bee43e0c-3d7d-4af7-97d5-affea0633392",
      "type": "http",
      "documentation": "Successful initialization",
      "method": "post",
      "endpoint": "Payment/v1/PaymentPage/Initialize",
      "responses": [
        {
          "uuid": "d1cdd2a1-0f0b-4e04-b5d4-50af3dfe71da",
          "body": "{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n    \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n  },\n  \"Token\": \"sk6jU1jJ7KqO1hgC\",\n  \"Expiration\": \"2050-01-30T12:45:22.258+01:00\",\n  \"RedirectUrl\": \"{{body 'ReturnUrl.Url'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Authorization",
              "value": "Y29tbWVyY2U6d2VhdmVycw=="
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "32de02d3-65d8-4d97-a443-feb748377e40",
      "type": "http",
      "documentation": "Successful page assert â€“ authorized result",
      "method": "post",
      "endpoint": "Payment/v1/PaymentPage/Assert",
      "responses": [
        {
          "uuid": "cbb9d818-b97d-4fa8-8b30-3e894a778b19",
          "body": "{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n    \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n  },\n  \"Transaction\": {\n    \"Type\": \"PAYMENT\",\n    \"Status\": \"AUTHORIZED\",\n    \"Id\": \"723n4MAjMdhjSAhAKEUdA8jtl9jb\",\n    \"Date\": \"2023-01-30T12:45:22.258+01:00\",\n    \"Amount\": {\n      \"Value\": \"2999\",\n      \"CurrencyCode\": \"USD\"\n    },\n    \"AcquirerName\": \"Saferpay Test Card\",\n    \"AcquirerReference\": \"000000\",\n    \"SixTransactionReference\": \"0:0:3:723n4MAjMdhjSAhAKEUdA8jtl9jb\",\n    \"ApprovalCode\": \"012345\"\n  },\n  \"PaymentMeans\": {\n    \"Brand\": {\n      \"PaymentMethod\": \"VISA\",\n      \"Name\": \"VISA Saferpay Test\"\n    },\n    \"DisplayText\": \"9123 45xx xxxx 1234\",\n    \"Card\": {\n      \"MaskedNumber\": \"912345xxxxxx1234\",\n      \"ExpYear\": 2015,\n      \"ExpMonth\": 9,\n      \"HolderName\": \"Max Mustermann\",\n      \"CountryCode\": \"CH\"\n    }\n  },\n  \"Liability\": {\n    \"LiabilityShift\": true,\n    \"LiableEntity\": \"THREEDS\",\n    \"ThreeDs\": {\n      \"Authenticated\": true,\n      \"LiabilityShift\": true,\n      \"Xid\": \"ARkvCgk5Y1t/BDFFXkUPGX9DUgs=\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "c6a9f825-33e7-46ed-bf9a-c0227f0f5ffe",
          "body": "{\n   \"ResponseHeader\":{\n      \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n      \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n   },\n   \"Behavior\":\"DO_NOT_RETRY\",\n   \"ErrorName\":\"3DS_AUTHENTICATION_FAILED\",\n   \"ErrorMessage\":\"3D-Secure authentication failed\",\n   \"TransactionId\":\"Q3hd5IbzlnKpvAICv2QdA72QlA1b\",\n   \"PayerMessage\":\"Card holder information -> Failed\",\n   \"OrderId\":\"000000001\"\n}\n",
          "latency": 0,
          "statusCode": 402,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "RequestHeader.RequestId",
              "value": "FAILURE_REQUEST_ID",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "adf5c22e-b872-4078-8b72-34a88c30222a",
          "body": "{\n   \"ResponseHeader\":{\n      \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n      \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n   },\n   \"Behavior\":\"DO_NOT_RETRY\",\n   \"ErrorName\":\"TRANSACTION_ABORTED\",\n   \"ErrorMessage\":\"Transaction aborted\",\n   \"TransactionId\":\"0xE27fb2GM6lvA5Slb0SA2IU4GWA\",\n   \"OrderId\":\"000000001\"\n}\n",
          "latency": 0,
          "statusCode": 402,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "RequestHeader.RequestId",
              "value": "CANCELLATION_REQUEST_ID",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f9a29c70-b8a9-414d-a22b-f6bd5c7168dd",
      "type": "http",
      "documentation": "Successful capture",
      "method": "post",
      "endpoint": "Payment/v1/Transaction/Capture",
      "responses": [
        {
          "uuid": "faf252e6-0417-47dd-a308-d862a0fcf527",
          "body": "{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n    \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n  },\n  \"CaptureId\": \"723n4MAjMdhjSAhAKEUdA8jtl9jb_c\",\n  \"Status\": \"CAPTURED\",\n  \"Date\": \"2018-08-08T13:45:22.258+02:00\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "12d223ed-9594-42a4-9f99-79c6d38cabfe",
      "type": "http",
      "documentation": "Successful refund",
      "method": "post",
      "endpoint": "Payment/v1/Transaction/Refund",
      "responses": [
        {
          "uuid": "12c1477c-12ef-4c92-87de-b1e5acd510d8",
          "body": "{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n    \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n  },\n  \"Transaction\": {\n    \"Type\": \"REFUND\",\n    \"Status\": \"AUTHORIZED\",\n    \"Id\": \"723n4MAjMdhjSAhAKEUdA8jtl9jb\",\n    \"Date\": \"2023-01-30T12:45:22.258+01:00\",\n    \"Amount\": {\n      \"Value\": \"2999\",\n      \"CurrencyCode\": \"USD\"\n    },\n    \"AcquirerName\": \"Saferpay Test Card\",\n    \"AcquirerReference\": \"000000\",\n    \"SixTransactionReference\": \"0:0:3:723n4MAjMdhjSAhAKEUdA8jtl9jb\",\n    \"ApprovalCode\": \"012345\",\n    \"IssuerReference\": {\n      \"TransactionStamp\": \"1212121212121212121212\"\n    }\n  },\n  \"PaymentMeans\": {\n    \"Brand\": {\n      \"PaymentMethod\": \"VISA\",\n      \"Name\": \"VISA Saferpay Test\"\n    },\n    \"DisplayText\": \"9123 45xx xxxx 1234\",\n    \"Card\": {\n      \"MaskedNumber\": \"912345xxxxxx1234\",\n      \"ExpYear\": 2015,\n      \"ExpMonth\": 9,\n      \"HolderName\": \"Max Mustermann\",\n      \"CountryCode\": \"CH\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "bd6307e3-b51b-48c2-8f52-f2a18c29fbad",
          "body": "{\n  \"ResponseHeader\": {\n    \"SpecVersion\": \"{{body 'RequestHeader.SpecVersion'}}\",\n    \"RequestId\": \"{{body 'RequestHeader.RequestId'}}\"\n  },\n   \"Behavior\": \"DO_NOT_RETRY\",\n   \"ErrorName\": \"TRANSACTION_NOT_FOUND\",\n   \"ErrorMessage\": \"Transaction not found\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "RequestHeader.RequestId",
              "value": "FAILURE_REQUEST_ID",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "bee43e0c-3d7d-4af7-97d5-affea0633392"
    },
    {
      "type": "route",
      "uuid": "32de02d3-65d8-4d97-a443-feb748377e40"
    },
    {
      "type": "route",
      "uuid": "f9a29c70-b8a9-414d-a22b-f6bd5c7168dd"
    },
    {
      "type": "route",
      "uuid": "12d223ed-9594-42a4-9f99-79c6d38cabfe"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}